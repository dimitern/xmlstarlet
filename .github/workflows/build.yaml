# Automatically build binary wheels and source packages.
name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

# Do not build Python <=2.7, <=3.5, PyPy or Win32 wheels.
# Install Linux and MacOS required libraries / tools.
env:
  CIBW_SKIP: "cp27-* cp35-* pp* *win32"
  CIBW_BEFORE_BUILD_LINUX: "yum install -y libxslt-devel"
  CIBW_BEFORE_BUILD_MACOS: "brew install automake"
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: "pytest {project}"
  
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - uses: ilammy/msvc-dev-cmd@v1
          
      - name: Build dependencies (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          xmlstarlet\build_msvc.bat
        env:
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
                      
      - name: Install cibuildwheel and build wheels
        run: |
          python -m pip --disable-pip-version-check install cibuildwheel==1.6.1
          python -m cibuildwheel --output-dir wheelhouse
        
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq libxslt1-dev libxml2-dev
          python -m pip --disable-pip-version-check install -r requirements.txt
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
