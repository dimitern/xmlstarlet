# Automatically build binary wheels and source packages.
name: cibuildwheel

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]

# Do not build Python <=2.7, <=3.5, or PyPy.
# Install Linux and MacOS required libraries / tools.
env:
  CIBW_SKIP: "cp27-* cp35-* pp*"
  CIBW_BEFORE_BUILD_LINUX: "yum install -y libxslt-devel || apt-get -y install libxslt1-dev libxml2-dev || apk add libxml2-dev libxslt-dev"
  CIBW_BEFORE_BUILD_MACOS: "brew install automake"
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: "pytest {project}"
  CIBW_DEPENDENCY_VERSIONS: "latest"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.7'

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
          
      - name: Build dependencies & wheels (Windows / x86)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call xmlstarlet\build_msvc.bat
          python -m pip --disable-pip-version-check install cibuildwheel==2.8.1
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "*win32"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Build dependencies & wheels (Windows / amd64)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call xmlstarlet\build_msvc.bat
          python -m pip --disable-pip-version-check install cibuildwheel==2.8.1
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "*win_amd64"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
                      
      - name: Install cibuildwheel & build wheels (Linux & MacOS)
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip --disable-pip-version-check install cibuildwheel==2.8.1
          python -m cibuildwheel --output-dir wheelhouse
        
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist_and_test:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist and run tests
        run: |
          sudo apt-get install -yqq libxslt1-dev libxml2-dev
          python -m pip install --upgrade pip setuptools wheel
          python -m pip --disable-pip-version-check install -r requirements.txt
          python -m pip --disable-pip-version-check install -r requirements_dev.txt
          invoke test coverage

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist_and_test]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
