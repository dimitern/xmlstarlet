# Makefile for xmlstarlet, specific for Windows, MSVC and NMAKE.
#
# Based on the Makefile file by Igor Zlatkovic in libxslt\win32.
#
# Take a look at the beginning and modify the variables to suit your 
# environment. Having done that, you can do a
#
# nmake [all]     to build the xmlstarlet and the accompanying utilities.
# nmake clean     to remove all compiler output files and return to a
#                 clean state.
# nmake rebuild   to rebuild everything from scratch. This basically does
#                 a 'nmake clean' and then a 'nmake all'.
# nmake install   to install the library and its header files.
#
# March 2002, Igor Zlatkovic <igor@zlatkovic.com>
# October 2020, Dimiter Naydenov <dimiter@naydenov.net>

AUTOCONF = .\config.msvc
!include $(AUTOCONF)

# There should never be a need to modify anything below this line.
# ----------------------------------------------------------------

BASEDIR = ..
SRCDIR = $(BASEDIR)\src
BINDIR = bin.msvc

# Names of various input and output components.
XMLSTARLET_NAME = xml
XMLSTARLET_BASENAME = $(XMLSTARLET_NAME)

# Places where intermediate files produced by the compiler go
INTDIR = int.msvc
INTDIR_A = inta.msvc

AWK = gawk.exe

# The preprocessor and its options.
CPP = cl.exe /EP
CPPFLAGS = /nologo

# The compiler and its options.
CC = cl.exe
CFLAGS = /nologo /D "WIN32" /D "_WINDOWS" /D "_MBCS" /W3 $(CRUNTIME) /D "_REENTRANT"
CFLAGS = $(CFLAGS) /I$(BASEDIR) /I$(INCPREFIX) /I$(SRCDIR)
CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE

# The linker and its options.
LD = link.exe
LDFLAGS = /nologo
LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
LIBS = wsock32.lib ws2_32.lib shell32.lib

# The archiver and its options.
AR = lib.exe
ARFLAGS = /nologo

# Optimisation and debug symbols.
!if "$(DEBUG)" == "1"
CFLAGS = $(CFLAGS) /D "_DEBUG" /Od /Z7
LDFLAGS = $(LDFLAGS) /DEBUG
!else
CFLAGS = $(CFLAGS) /D "NDEBUG" /O2 
!endif

# Fix "undefined symbol __except_handler4_common" on x86
!if "$(Platform)" == "x86"
LIBS = $(LIBS) vcruntime.lib
!endif

# Usage texts used to generate USAGE_SOURCES.
USAGE_TEXTS = $(SRCDIR)\usage.txt\
    $(SRCDIR)\c14n-usage.txt\
	$(SRCDIR)\depyx-usage.txt\
	$(SRCDIR)\edit-usage.txt\
	$(SRCDIR)\elem-usage.txt\
	$(SRCDIR)\escape-usage.txt\
	$(SRCDIR)\format-usage.txt\
	$(SRCDIR)\pyx-usage.txt\
	$(SRCDIR)\select-usage.txt\
	$(SRCDIR)\trans-usage.txt\
	$(SRCDIR)\unescape-usage.txt\
	$(SRCDIR)\validate-usage.txt

# Generated usage source files.	
USAGE_SOURCES = $(SRCDIR)\usage.c\
    $(SRCDIR)\c14n-usage.c\
	$(SRCDIR)\depyx-usage.c\
	$(SRCDIR)\edit-usage.c\
	$(SRCDIR)\elem-usage.c\
	$(SRCDIR)\escape-usage.c\
	$(SRCDIR)\format-usage.c\
	$(SRCDIR)\pyx-usage.c\
	$(SRCDIR)\select-usage.c\
	$(SRCDIR)\trans-usage.c\
	$(SRCDIR)\unescape-usage.c\
	$(SRCDIR)\validate-usage.c

SOURCES = $(SRCDIR)\trans.c\
    $(SRCDIR)\xml.c\
	$(SRCDIR)\xml_C14N.c\
	$(SRCDIR)\xml_depyx.c\
	$(SRCDIR)\xml_edit.c\
	$(SRCDIR)\xml_elem.c\
	$(SRCDIR)\xml_escape.c\
	$(SRCDIR)\xml_format.c\
	$(SRCDIR)\xml_pyx.c\
	$(SRCDIR)\xml_select.c\
	$(SRCDIR)\xml_trans.c\
	$(SRCDIR)\xml_validate.c\
	$(SRCDIR)\win32_xml_ls.c

OBJS = $(INTDIR)\trans.obj\
	$(INTDIR)\xml.obj\
	$(INTDIR)\xml_C14N.obj\
	$(INTDIR)\xml_depyx.obj\
	$(INTDIR)\xml_edit.obj\
	$(INTDIR)\xml_elem.obj\
	$(INTDIR)\xml_escape.obj\
	$(INTDIR)\xml_format.obj\
	$(INTDIR)\xml_pyx.obj\
	$(INTDIR)\xml_select.obj\
	$(INTDIR)\xml_trans.obj\
	$(INTDIR)\xml_validate.obj\
	$(INTDIR)\win32_xml_ls.obj

USAGE_OBJS = $(INTDIR)\usage.obj\
    $(INTDIR)\c14n-usage.obj\
	$(INTDIR)\depyx-usage.obj\
	$(INTDIR)\edit-usage.obj\
	$(INTDIR)\elem-usage.obj\
	$(INTDIR)\escape-usage.obj\
	$(INTDIR)\format-usage.obj\
	$(INTDIR)\pyx-usage.obj\
	$(INTDIR)\select-usage.obj\
	$(INTDIR)\trans-usage.obj\
	$(INTDIR)\unescape-usage.obj\
	$(INTDIR)\validate-usage.obj

OBJS_A = $(INTDIR_A)\trans.obj\
	$(INTDIR_A)\xml.obj\
	$(INTDIR_A)\xml_C14N.obj\
	$(INTDIR_A)\xml_depyx.obj\
	$(INTDIR_A)\xml_edit.obj\
	$(INTDIR_A)\xml_elem.obj\
	$(INTDIR_A)\xml_escape.obj\
	$(INTDIR_A)\xml_format.obj\
	$(INTDIR_A)\xml_pyx.obj\
	$(INTDIR_A)\xml_select.obj\
	$(INTDIR_A)\xml_trans.obj\
	$(INTDIR_A)\xml_validate.obj\
	$(INTDIR_A)\win32_xml_ls.obj

USAGE_OBJS_A = $(INTDIR_A)\usage.obj\
    $(INTDIR_A)\c14n-usage.obj\
	$(INTDIR_A)\depyx-usage.obj\
	$(INTDIR_A)\edit-usage.obj\
	$(INTDIR_A)\elem-usage.obj\
	$(INTDIR_A)\escape-usage.obj\
	$(INTDIR_A)\format-usage.obj\
	$(INTDIR_A)\pyx-usage.obj\
	$(INTDIR_A)\select-usage.obj\
	$(INTDIR_A)\trans-usage.obj\
	$(INTDIR_A)\unescape-usage.obj\
	$(INTDIR_A)\validate-usage.obj
    
!if "$(VCMANIFEST)" == "1"
_VC_MANIFEST_EMBED_EXE= if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
_VC_MANIFEST_EMBED_DLL= if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2
!else
_VC_MANIFEST_EMBED_EXE=
_VC_MANIFEST_EMBED_DLL=
!endif

all : usage-gen xmlstarlet

usage-gen: $(USAGE_TEXTS)
    usage_gen.cmd
	
xmlstarlet : $(BINDIR)\$(XMLSTARLET_BASENAME).exe

clean :
	if exist $(INTDIR) rmdir /S /Q $(INTDIR)
	if exist $(INTDIR_A) rmdir /S /Q $(INTDIR_A)
	if exist $(BINDIR) rmdir /S /Q $(BINDIR)

rebuild : clean all

distclean : clean
	if exist config.* del config.*
	if exist Makefile del Makefile
	if exist $(SRCDIR)\usage.c del $(SRCDIR)\*usage.c
	if exist $(SRCDIR)\..\version.h del $(SRCDIR)\..\version.h

install : all
	if not exist $(BINPREFIX) mkdir $(BINPREFIX)
	copy $(BINDIR)\*.exe $(BINPREFIX)

install-dist : install

# Makes the compiler output directory.
$(BINDIR) :
	if not exist $(BINDIR) mkdir $(BINDIR)

# Makes the intermediate directory.
$(INTDIR) :
	if not exist $(INTDIR) mkdir $(INTDIR)

# Makes the static intermediate directory.
$(INTDIR_A) :
	if not exist $(INTDIR_A) mkdir $(INTDIR_A)

# An implicit rule for xmlstarlet.
APPLIBS = $(LIBS)
!if "$(STATIC)" == "1"
APPLIBS = $(LIBS) libxml2_a.lib libxslt_a.lib libexslt_a.lib
!if "$(WITH_ICONV)" == "1"
APPLIBS = $(APPLIBS) iconv.lib
!endif
!if "$(WITH_ZLIB)" == "1"
APPLIBS = $(APPLIBS) zlib.lib
!endif
$(BINDIR)\$(XMLSTARLET_BASENAME).exe: $(INTDIR_A) $(BINDIR)
	$(CC) /D "LIBXML_STATIC" /D "LIBXSLT_STATIC" /D "LIBEXSLT_STATIC" \
		$(CFLAGS) /Fo$(INTDIR_A)\ /c $(USAGE_SOURCES) $(SOURCES)
	$(LD) $(LDFLAGS) /OUT:$@ $(APPLIBS) $(OBJS_A) $(USAGE_OBJS_A)
	@$(_VC_MANIFEST_EMBED_EXE)
!else
APPLIBS = $(LIBS) libxml2.lib libxslt.lib libexslt.lib
$(BINDIR)\$(XMLSTARLET_BASENAME).exe: $(INTDIR) $(BINDIR)
	$(CC) $(CFLAGS) /Fo$(INTDIR)\ /c $(USAGE_SOURCES) $(SOURCES)
	$(LD) $(LDFLAGS) /OUT:$@ $(APPLIBS) $(OBJS)$(USAGE_OBJS)
	@$(_VC_MANIFEST_EMBED_EXE)
!endif

# Source dependences should be autogenerated somehow here, but how to
# do it? I have no clue.

